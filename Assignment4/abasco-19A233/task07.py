# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SiLKP8RPTslhdNlUExkujnaC-w2nnlrB

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
# Visualize the results
ns =  Namespace("http://somewhere#")
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print (s)

from rdflib.plugins.sparql import prepareQuery
q1 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject RDFS:subClassOf ns:Person . 
  }''',
  initNs = { "RDFS":RDFS, "ns": ns}
)
  
for r in g.query(q1):
  print(r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# Visualize the results
for s,p,o in g.triples((None, RDF.type, ns.Person)):
  print(s)
for subClasses,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s2,p,o in g.triples((None, RDF.type, subClasses)):
    print(s2)

from rdflib.plugins.sparql import prepareQuery
q2 = prepareQuery('''
  SELECT ?s WHERE { 
    ?subclass RDFS:subClassOf* ns:Person .
    ?s RDF:type ?subclass 
  }''',
  initNs = { "RDF":RDF, "RDFS":RDFS, "ns": ns}
)
  
for r in g.query(q2):
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""


# TO DO
# Visualize the results
for s,p,o in g.triples((None, RDF.type, ns.Person)):
    for s,p,o in g.triples((s, None, None)):
      print(s, p)

for subClasses,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s2,p2,o in g.triples((None, RDF.type, subClasses)):
    for s2,p2,o in g.triples((s2, None, None)):
      print(s2, p2)

from rdflib.plugins.sparql import prepareQuery
q3 = prepareQuery('''
  SELECT ?s ?p ?o WHERE { 
    ?subclass RDFS:subClassOf* ns:Person .
    ?s RDF:type ?subclass .
    ?s ?p ?o 
  }''',
  initNs = { "RDF":RDF, "RDFS":RDFS, "ns": ns}
)
  
for r in g.query(q3):
  print(r.s, r.p)