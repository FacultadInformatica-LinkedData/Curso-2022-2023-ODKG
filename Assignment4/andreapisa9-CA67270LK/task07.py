# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HqC9IkWp0Kvs-nLqjf_dcxvaXqvzKnEu

**Task 07: Querying RDF(s)**
"""

#!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
#rdflib
subclasses_rdflib = [s for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person))]
#SPARQL
q1 = prepareQuery('''
  SELECT ?Subject WHERE{
    ?Subject rdfs:subClassOf ns:Person
  }
  ''',
  initNs={"ns" : ns, "rdfs" : RDFS}
)
# Visualize the results
for i in subclasses_rdflib:
  print(i)

print("---")

for r in g.query(q1):
  print(r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
#rdflib
individuals_rdflib = [s for s,p,o in g.triples((None, RDF.type, ns.Person))]
for i in subclasses_rdflib:
  subclass_individuals = [s for s,p,o in g.triples((None, RDF.type, i))]
  for individual in subclass_individuals:
    individuals_rdflib.append(individual) 
#SPARQL
q2 = prepareQuery('''
  SELECT ?Subject WHERE{
    ?Class rdfs:subClassOf* ns:Person .
    ?Subject a ?Class
  }
  ''',
  initNs={"ns" : ns, "rdfs" : RDFS}
)

# Visualize the results
for i in individuals_rdflib:
  print(i)

print("---")

for r in g.query(q2):
  print(r.Subject)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
#rdflib
props = []
for i in individuals_rdflib:
  p = [p for s,p,o in g.triples((i, None, None))]
  ind_class = g.value(i, RDF.type, None)
  props.append((i,ind_class, p))
#SPARQL
q4 = prepareQuery('''
  SELECT ?Subject ?Class ?Predicate WHERE{
    ?Subject ?Predicate ?Object .
    ?Subject a ?Class .
    ?Class rdfs:subClassOf* ns:Person
  }
  ''',
  initNs={"ns" : ns, "rdfs" : RDFS}
)
# Visualize the results
for i,j,k in props:
  for element in k:
    print(i, j, element)
print("---")
for r in g.query(q4):
  print(r.Subject, r.Class, r.Predicate)
