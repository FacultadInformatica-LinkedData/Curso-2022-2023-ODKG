# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13lWb90izoYbSnEKTHkiEyEHWwpsJPnYZ

**Task 07: Querying RDF(s)**
"""

#!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
# Visualize the results

ns = Namespace("http://somewhere#")

# RDFlib

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)

# sparql

from rdflib.plugins.sparql import prepareQuery

q1 = prepareQuery('''
  SELECT ?s WHERE { 
    ?s rdfs:subClassOf ns:Person 
  }
  ''', initNs = {
      "ns":ns,
      "rdfs":RDFS
  }
)

for r in g.query(q1):
  print(r.s)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# Visualize the results

#RDFLib
for s,p,o in g.triples((None, RDF.type, ns.Person)):
  print(s)

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s1,p1,o1 in g.triples ((None, RDF.type,s)):
    print(s1)



#sparql
q2 = prepareQuery('''
  SELECT ?s WHERE { 
    ?class rdfs:subClassOf* ns:Person .
    ?s a ?class 
  }
  ''', initNs = {
      "ns":ns,
      "rdfs":RDFS
  }
)

for r in g.query(q2):
  print(r.s)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
# Visualize the results

#RDFlib
for s,p,o in g.triples((None, RDF.type, ns.Person)):
  for s1,p1,o1 in g.triples((s,None,None)):
    print(s,p1,o1)

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s1,p1,o1 in g.triples((None,RDF.type,s)):
    for s2,p2,o2 in g.triples((s1,None,None)):
      print(s2,p2,o2)

#sparql

q2 = prepareQuery('''
  SELECT ?s ?p WHERE { 
    ?class rdfs:subClassOf* ns:Person .
    ?s a ?class .
    ?s ?p ?value
  }
  ''', initNs = {
      "ns":ns,
      "rdfs":RDFS
  }
)

for r in g.query(q2):
  print(r.s, r.p)