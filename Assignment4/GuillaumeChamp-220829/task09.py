# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LUgvQclAM7rvK01RWjkSBlW8O8yMDRtc

**Task 09: Data linking**
"""

from rdflib import Graph, Namespace
from rdflib.namespace import OWL

github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials/"
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage + "rdf/data03.rdf", format="xml")
g2.parse(github_storage + "rdf/data04.rdf", format="xml")

#Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

data3 = Namespace("http://data.three.org#")
data4 = Namespace("http://data.four.org#")
vcard = Namespace("https://www.w3.org/2001/vcard-rdf/3.0#")
# print g1
print("graph 1")
for s, p, o in g1.triples((None, None, None)):
    print(s, p, o)
# print g2
print("graph 2")
for s, p, o in g2.triples((None, None, None)):
    print(s, p, o)
# At this point I have to check for each individual in graph 3 if he have the same value as an individual in graph 4
# and in this case add it

vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
for s, p, o in g1.triples((None, vcard.Given, None)):
    for ss, pp, oo in g2.triples((None, vcard.Given, None)):
        if o == oo:  # at this point the two entity s and ss have the same given name
            # print("Given name match",s,ss,o)
            for s1, p1, o1 in g1.triples((s, vcard.Family, None)):
                for ss1, pp1, oo1 in g2.triples((ss, vcard.Family, None)):
                    if o1 == oo1:
                        # print("And family name too",s,ss,o,o1)
                        g3.add((s, OWL.sameAs, ss1))
# checking
for s, p, o in g3.triples((None, None, None)):
    print(s, p, o)
