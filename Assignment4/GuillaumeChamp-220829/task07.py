# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VQ1LhFgiaV_vxmdAreeqrRLpwUWpN-Gi

**Task 07: Querying RDF(s)**
"""

from rdflib import Graph, Namespace
from rdflib.namespace import RDF, RDFS
from rdflib.plugins.sparql import prepareQuery

github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage + "/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

ns = Namespace("http://somewhere#")
# Visualize the results
q1 = prepareQuery('''
  SELECT  ?sub  WHERE {
    ?sub rdfs:subClassOf ns:Person.
  }  
  ''', initNs={"ns": ns}
                  )
for r in g.query(q1):
    print(r.sub)
print("with RDFLib")
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
    print(s)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

q2 = prepareQuery('''
  SELECT  ?instance  WHERE 
  {
    {?sub rdfs:subClassOf* ns:Person.
    ?instance a ?sub}
  }  
  ''', initNs={"ns": ns}
                  )
# Visualize the results
for r in g.query(q2):
    print(r.instance)

print("with RDFLib")
for s, p, o in g.triples((None, RDF.type, ns.Person)):
    print(s)
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
    for s1, p1, o1 in g.triples((None, RDF.type, s)):
        print(s1)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

q3 = prepareQuery('''
  SELECT DISTINCT ?instance ?predicate ?object WHERE 
  {
      ?sub rdfs:subClassOf* ns:Person.
      ?instance a ?sub.
      ?instance ?predicate ?object.
  }  
  ''', initNs={"ns": ns}
                  )
# Visualize the results
print("Query 3")
for r in g.query(q3):
    print(r.instance, r.predicate, r.object)

print("with RDFLib")
for s, p, o in g.triples((None, RDF.type, ns.Person)):
    print(s)
    for s0, p0, o0 in g.triples((s, None, None)):
        print(s0, p0, o0)
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
    for s1, p1, o1 in g.triples((None, RDF.type, s)):
        print(s1)
        for s0, p0, o0 in g.triples((s1, None, None)):
            print(s0, p0, o0)
