# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z0k15vN8rPopqqRfsjxeU_qTzsuMflW5

**Task 07: Querying RDF(s)**"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")

# RDFLib

for s in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)

#SPARQL

q1 = prepareQuery('''
  SELECT ?Subject WHERE {
    ?Subject rdfs:subClassOf ns:Person
  }
  ''',
  initNs = { "rdfs": RDFS,"ns": ns}
)

for ns in g.query(q1):
  print(ns.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**"""

from rdflib.plugins.sparql import prepareQuery

ns = Namespace("http://somewhere#")

# RDFLib
for s,p,o in g.triples((None,RDF.type,ns.Person)) :
  print(s)

for person1,p1,o1 in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s2,p2,o2 in g.triples((None,RDF.type,person1)):
   print(s2)

#SPARQL
q2 = prepareQuery('''
  SELECT ?Ind WHERE {
    ?Subject rdfs:subClassOf* ns:Person.
    ?Ind rdf:type ?Subject
  }
  ''',
  initNs = { "rdfs": RDFS,"ns": ns,"rdf": RDF}
)

for ns in g.query(q2):
  print(ns.Ind)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**"""

# RDFLib
ns = Namespace("http://somewhere#")

for s,p,o in g.triples((None,RDF.type,ns.Person)) :
  for s2,p2,o2 in g.triples((s,None,None)):
      print(s2,p2,o2)

for person1,p1,o1 in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s2,p2,o2 in g.triples((None,RDF.type,person1)):
    for s3,p3,o3 in g.triples((s2,None,None)):
      print(s3,p3,o3)

#SPARQL
q3 = prepareQuery('''
  SELECT ?Ind ?p ?o WHERE {
    ?Subject rdfs:subClassOf* ns:Person.
    ?Ind rdf:type ?Subject.
    ?Ind ?p ?o
  }
  ''',
  initNs = { "rdfs": RDFS,"ns": ns,"rdf": RDF}
)

for ns in g.query(q3):
  print(ns.Ind,ns.p,ns.o)
