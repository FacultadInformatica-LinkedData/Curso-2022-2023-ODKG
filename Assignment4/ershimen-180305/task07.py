# Jan Cerezo Pomykol - 180305
# github.com/ershimen

# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GgXPXmJUF773MxUSKumMHhAjCMsiDrIs

**Task 07: Querying RDF(s)**
"""

#!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
print("Task 7.1")
# RDFLib
print("RDFLib")
for s, _, _ in g.triples((None, RDFS.subClassOf, ns.Person)):
    print(s)

print()

# SPARQL
print("SPARQL")
q1 = prepareQuery('''
  PREFIX ns: <http://somewhere#>
  SELECT ?Subclass WHERE { 
    ?Subclass RDFS:subClassOf ns:Person.
  }
  ''',
  initNs = {"RDFS": RDFS}
)

# Visualize the results
for r in g.query(q1):
  print(r.Subclass)

print()

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
print("Task 7.2")
# RDFLib
print("RDFLib")
for s, _, _ in g.triples((None, RDF.type, ns.Person)):
    print(s)
for subclass, _, _ in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s, _, _ in g.triples((None, RDF.type, subclass)):
    print(s)

print()

# SPARQL
print("SPARQL")
q1 = prepareQuery('''
  PREFIX ns: <http://somewhere#>
  SELECT ?Individual WHERE { 
    {
      ?Individual rdf:type ns:Person.
    }
    UNION
    {
      ?SubClass rdfs:subClassOf* ns:Person.
      ?Individual rdf:type ?SubClass
    }
  }
  ''')

# Visualize the results
for r in g.query(q1):
  print(r.Individual)

print()

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
print("Task 7.3")
# RDFLib
print("RDFLib")
for s, _, _ in g.triples((None, RDF.type, ns.Person)):
  for _, p, o in g.triples((s, None, None)):
    print(s, p, o)
for subclass, _, _ in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s, _, _ in g.triples((None, RDF.type, subclass)):
    for _, p, o in g.triples((s, None, None)):
      print(s, p, o)

print()

# SPARQL
print("SPARQL")
q1 = prepareQuery('''
  PREFIX ns: <http://somewhere#>
  SELECT ?Individual ?Property ?Class WHERE {
    {
      ?Individual rdf:type ns:Person.
    }
    UNION
    {
      ?SubClass rdfs:subClassOf* ns:Person.
      ?Individual rdf:type ?SubClass.
    }
    ?Individual ?Property ?Class.
  }
  ''')

# Visualize the results
for r in g.query(q1):
  print(r.Individual, r.Property, r.Class)

print()