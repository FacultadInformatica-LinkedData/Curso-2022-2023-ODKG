# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/estrellaxyx/Curso2022-2023-ODKG/blob/master/Assignment4/course_materials/notebooks/Task07.ipynb

**Task 07: Querying RDF(s)**
"""

# In terminal
# !pip install rdflib

github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO

#RDFLib
ns = Namespace("http://somewhere#")
# Visualize the results
print('TASK 7.1: RDFLib')
for s,p,o in g.triples((None, RDFS.subClassOf,ns.Person)):
  print(s)


#SPARQL
from rdflib.plugins.sparql import prepareQuery
q1 = prepareQuery("""
SELECT ?s WHERE {
  ?s rdfs:subClassOf ns:Person.
}
""", initNs={"ns":ns})

# Visualize the results
print('TASK 7.1: SPARQL')
for r in g.query(q1):
 print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
#RDFLib
ns = Namespace("http://somewhere#")
# Visualize the results
print('TASK 7.2: RDFLib')
for s,p,o in g.triples((None, RDF.type,ns.Person)): # Individuals of Person
  print(s)

for s,p,o in g.triples((None, RDFS.subClassOf,ns.Person)): # Individuals of subclasses of Person
  for s1,p1,o1 in g.triples((None, RDF.type, s)):
    print(s1)

#SPARQL
from rdflib.plugins.sparql import prepareQuery
q1 = prepareQuery("""
SELECT ?ind WHERE {
  {
    ?s rdfs:subClassOf* ns:Person.
    ?ind rdf:type ?s.
  }
  UNION
  {
    ?ind rdf:type ns:Person.
  }
}
""", initNs={"ns":ns})

# Visualize the results
print('TASK 7.2: SPARQL')
for r in g.query(q1):
 print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
#RDFLib
ns = Namespace("http://somewhere#")
# Visualize the results
print('TASK 7.3: RDFLib')
for s,p,o in g.triples((None, RDF.type,ns.Person)): # Individuals of Person
  for s1,p1,o1 in g.triples((s,None,None)): # All triples of individuals of persona
    print(s1,p1,o1)

for s,p,o in g.triples((None, RDFS.subClassOf,ns.Person)): 
  for s1,p1,o1 in g.triples((None, RDF.type, s)): # Individuals of subclasses of Person
    for s2,p2,o2 in g.triples((s1,None,None)): # All triples of individuals of subclasses of person
      print(s2,p2,o2)

#SPARQL
from rdflib.plugins.sparql import prepareQuery
q1 = prepareQuery("""
SELECT ?ind ?prop ?obj WHERE {
  {
    ?s rdfs:subClassOf* ns:Person.
    ?ind rdf:type ?s.
    ?ind ?prop ?obj.
  }
  UNION
  {
    ?ind rdf:type ns:Person.
    ?ind ?prop ?obj.
  }
}
""", initNs={"ns":ns})

# Visualize the results
print('TASK 7.3: SPARQL')
for r in g.query(q1):
 print(r)