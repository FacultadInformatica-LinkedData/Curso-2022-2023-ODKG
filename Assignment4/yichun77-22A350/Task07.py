# -*- coding: utf-8 -*-
"""Copia de Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16uNDHGoyIrw7OaCZX8KSBvvQAwqOiXoJ

**Task 07: Querying RDF(s)**
"""

#!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

ns = Namespace("http://somewhere#")

# RDFLib
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print("RDFLib - Subclasses of Person:", s)

# SPARQL
from rdflib.plugins.sparql import prepareQuery
q1 = prepareQuery('''
  SELECT ?s WHERE { 
    ?s rdfs:subClassOf ns:Person .
  }''',
  initNs = {"rdfs":RDFS, "ns":ns}
)
for r in g.query(q1):
  print("SPARQL - Subclasses of Person:", r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# RDFLib
for s_person,p_person,o_person in g.triples((None, RDF.type, ns.Person)):
    print("RDFLib - Individuals of Person:", s_person)
for s_sub,p_sub,o_sub in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s_subIndividual,ps_subIndividual,os_subIndividual in g.triples((None, RDF.type, s_sub)):
    print("RDFLib - Individuals of subclasses of Person:", s_subIndividual)

# SPARQL
q_person = prepareQuery('''
  SELECT ?s WHERE { 
    {?s rdf:type ns:Person} 
    UNION{
      ?s rdfs:subClassOf* ns:Person .
      ?s rdf:type ?Subclass .}
  }''',
  initNs = {"rdfs": RDFS, "ns": ns, "rdf": RDF}
)
for r in g.query(q_person):
  print("SPARQL - Individuals of Person (subclasses included):", r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# RDFLib
for s_p,p_p,o_p in g.triples((None, RDF.type, ns.Person)):
  for s_pro,p_pro,o_pro in g.triples((s_p, None, None)):
    print("RDFLib - Individuals and properties of Person:", s_pro,p_pro,o_pro)

for s_p,p_p,o_p in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s_sub,p_sub,o_sub in g.triples((None, RDF.type, s_p)):
    for s_pro,p_pro,o_pro in g.triples((s_sub, None, None)):
      print("RDFLib - Individuals and properties of subclasses of Person:", s_pro,p_pro,o_pro)

# SPARQL
q_pro = prepareQuery('''
  SELECT ?s ?p ?o WHERE { 
    {
      ?s rdf:type ns:Person .
      ?s ?p ?o
    } UNION {
      ?sub rdfs:subClassOf* ns:Person .
      ?s rdf:type ?sub .
      ?s ?p ?o }
  }''',
  initNs = {"rdfs": RDFS, "ns": ns, "rdf": RDF}
)
for r in g.query(q_pro):
  print("SPARQL - Individuals and properties of Person (subclasses included):", r.s, r.p, r.o)
