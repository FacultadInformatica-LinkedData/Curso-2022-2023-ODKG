# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pCNp0Ig2JkFpdTmK7s8piwiDCuOX6KY-

**Task 07: Querying RDF(s)**"""

github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

from rdflib.plugins.sparql import prepareQuery
from rdflib import FOAF

ns = Namespace("http://somewhere#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
print("SPARQL VERSION:")

q1 = prepareQuery('''
  SELECT ?subClasses WHERE { 
    ?subClasses rdfs:subClassOf ns:Person.
  }
  ''',
  initNs = {"ns": ns, "rdfs": RDFS}
)

for r in g.query(q1):
  print(r.subClasses)

#############################################################
print("RDFLib VERSION:")

for t,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(t)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

print("SPARQL VERSION:")
q1 = prepareQuery('''

  SELECT ?individuals WHERE { 
    ?subclasses rdfs:subClassOf* ns:Person.
    ?individuals a ?subclasses.
  }

''',
  initNs = {"ns": ns, "rdfs": RDFS}
)


for r in g.query(q1):
  print(r.individuals)

#############################################################
print("RDFLib VERSION:")

allIndividuals = []

for t,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for x,q,f in g.triples ((None, RDF.type, t)):
    allIndividuals.append(x)

for t,p,o in g.triples((None, RDF.type, ns.Person)):
  allIndividuals.append(t)

print(allIndividuals)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**"""

##tutte le properties degli individuals

print("SPARQL VERSION:")
q1 = prepareQuery('''

  SELECT ?individuals ?properties ?classes WHERE { 
    ?classes rdfs:subClassOf* ns:Person.
    ?individuals a ?classes.
    ?individuals ?properties ?objects.
  }

''',
  initNs = {"ns": ns, "rdfs": RDFS}
)


for r in g.query(q1):
  print(r.individuals, r.properties, r.classes)

#############################################################
print("RDFLib VERSION:")

for t,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for x,q,f in g.triples ((None, RDF.type, t)):
    for x,q,f in g.triples ((x, None, None)):
       print(t,x,q)


for t,p,o in g.triples((None, RDF.type, ns.Person)):
  for x,r,s in g.triples((t, None, None)):
    print(o,t,r)
