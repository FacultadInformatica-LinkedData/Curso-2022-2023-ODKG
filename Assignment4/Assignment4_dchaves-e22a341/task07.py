# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jg_DH7e3kOCVKA7VNqcQpZefedUV7T32

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib.plugins.sparql import prepareQuery
from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
ns = Namespace("http://somewhere#")

#RDFLib
aux = ns.Person
aux2 = ''
while (aux != aux2):
 aux2 = aux
 for s,p,o in g.triples((None, RDFS.subClassOf, aux)):
  aux = s
  print(s)  

#SPARQL
q1 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject RDFS:subClassOf+ ns:Person. 
  }
  ''',
  initNs = { "RDFS" : RDFS, 
            "ns" : ns}
)


# Visualize the results
for r in g.query(q1):
  print(r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO

#RDFLib
aux = ns.Person
aux2 = ''
while (aux != aux2):
 aux2 = aux
 for s,p,o in g.triples((None, RDFS.subClassOf, aux)):
  aux = s
  for s, p, o in g.triples((None, RDF.type, aux2)): 
   print(s)

#SPARQL
q1 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?class RDFS:subClassOf* ns:Person. 
    ?Subject a ?class
  }
  ''',
  initNs = { "RDFS" : RDFS, "ns" : ns}
)


# Visualize the results
for r in g.query(q1):
  print(r.Subject)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
aux = ns.Person
aux2 = ''
while (aux != aux2):
 aux2 = aux
 for s,p,o in g.triples((None, RDFS.subClassOf, aux)):
  aux = s
  for s, p, o in g.triples((None, RDF.type, aux2)): 
   for s, p, o in g.triples((s, None, None)):
     print(s,p,o)

#SPARQL
q1 = prepareQuery('''
  SELECT ?Subject ?p ?v WHERE { 
    ?class RDFS:subClassOf* ns:Person. 
    ?Subject a ?class.
    ?Subject ?p ?v

  }
  ''',
  initNs = { "RDFS" : RDFS, "ns" : ns}
)


# Visualize the results
for r in g.query(q1):
  print(r.v)