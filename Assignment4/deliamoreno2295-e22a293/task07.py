# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jLU2UGP3V2fknY2NpyrkeferLht34ggS

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
for s,p,o in g.triples((None,RDFS.subClassOf,ns.Person)):
    print(s)
# Visualize the results

#for r in g.query(q1):
q1 = prepareQuery('''
  SELECT ?subclase WHERE { 
    ?subclase rdfs:subClassOf ns:Person . 
  }
  ''',
  initNs={'rdfs':RDFS, 'ns':ns}
)
for r in g.query(q1):
  print(r.subclase)
#  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
for s,p,o in g.triples((None,RDF.type,ns.Person)) :
  print(s)
  for s,p,o in g.triples((None,RDFS.subClassOf,ns.Person)) :
    for s0,p0,o0 in g.triples((None,RDF.type,s)) :
      print(s0)
# Visualize the results
q1 = prepareQuery('''
  SELECT  ?person  WHERE 
  {
    ?sub rdfs:subClassOf* ns:Person .
    ?person a ?sub
  }  
  ''',initNs={'rdfs':RDFS, 'ns':ns}
)

for p in g.query(q1):
  print(p.person)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
for s,p,o in g.triples((None,RDF.type,ns.Person)) :
  for s0,p0,o0 in g.triples((s,None,None)) :
   print(s0,p0,o0) 
  for s,p,o in g.triples((None,RDFS.subClassOf,ns.Person)) :
    for s0,p0,o0 in g.triples((None,RDF.type,s)) :
      for s1,p1,o1 in g.triples((s0,RDF.type,None)) :
        print(s1,p1)
# Visualize the results

  q1 = prepareQuery('''
  SELECT   ?person ?properti ?value  WHERE 
  {
    ?sub rdfs:subClassOf* ns:Person .
    ?person a ?sub.
    ?person ?properti ?value
  }  
  ''',initNs={'rdfs':RDFS, 'ns':ns}
)

for p in g.query(q1):
  print(p.person,p.properti)