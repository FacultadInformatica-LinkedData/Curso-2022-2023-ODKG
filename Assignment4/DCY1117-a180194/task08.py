# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/DCY1117/Curso2022-2023-ODKG/blob/master/Assignment4/course_materials/notebooks/Task08.ipynb

**Task 08: Completing missing data**
"""

# pip install rdflib, Terminal
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

from rdflib.plugins.sparql import prepareQuery

ns = Namespace("http://data.org#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

print("Elementos de la clase person y su given name, family name y email############")

q1 = prepareQuery('''
  SELECT ?Subject ?given ?family ?email WHERE { 
    ?Subject rdf:type ns:Person.
    OPTIONAL{ ?Subject VCARD:Given ?given }.
    OPTIONAL{ ?Subject VCARD:Family ?family }.
    OPTIONAL{ ?Subject VCARD:EMAIL ?email }.
  }
  ''',
  initNs = { "ns": ns ,"VCARD": VCARD }
)

print("print grafo 1############")

for r in g1.query(q1):
  print(r)

print("print grafo 2############")

for r in g2.query(q1):
  print(r)

for r in g1.query(q1):
  if(r.given == None):
    for r1 in g2.query(q1):
      if r1.Subject == r.Subject:
        g1.add((r.Subject, VCARD.Given, r1.given))
  if(r.family == None):
    for r1 in g2.query(q1):
      if r1.Subject == r.Subject:
        g1.add((r.Subject, VCARD.Family, r1.family))
  if(r.email == None):
    for r1 in g2.query(q1):
      if r1.Subject == r.Subject:
        g1.add((r.Subject, VCARD.EMAIL, r1.email))
  
print("print grafo 1############")

for r in g1.query(q1):
  print(r)

print("print grafo 2############")

for r in g2.query(q1):
  print(r)