[
  {
    "op": "core/column-rename",
    "oldColumnName": "MUNICIPIO",
    "newColumnName": "Municipality",
    "description": "Rename column MUNICIPIO to Municipality"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ESTACION",
    "newColumnName": "Station",
    "description": "Rename column ESTACION to Station"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "MAGNITUD",
    "newColumnName": "Magnitude",
    "description": "Rename column MAGNITUD to Magnitude"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PUNTO_MUESTREO",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "_",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column PUNTO_MUESTREO by separator"
  },
  {
    "op": "core/column-removal",
    "columnName": "PUNTO_MUESTREO 2",
    "description": "Remove column PUNTO_MUESTREO 2"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "PUNTO_MUESTREO 3",
    "newColumnName": "Technique",
    "description": "Rename column PUNTO_MUESTREO 3 to Technique"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "PUNTO_MUESTREO 1",
    "newColumnName": "CodeofStation",
    "description": "Rename column PUNTO_MUESTREO 1 to CodeofStation"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Station",
    "expression": "grel:'00'+value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Station using expression grel:'00'+value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D01",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D01 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D02",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D02 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D03",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D03 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D04",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D04 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D05",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D05 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D06",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D06 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D07",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D07 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D08",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D08 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D09",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D09 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D10",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D10 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D11",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D11 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D12",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D12 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D13",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D13 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D14",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D14 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D15",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D15 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D16",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D16 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D17",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D17 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D18",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D18 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D19",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D19 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D20",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D20 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D21",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D21 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D22",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D22 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D23",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D23 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D24",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D24 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D25",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D25 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D26",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D26 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D27",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D27 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D28",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D28 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D29",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D29 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D30",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D30 using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "D31",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column D31 using expression value.toNumber()"
  },
  {
    "op": "core/column-removal",
    "columnName": "V01",
    "description": "Remove column V01"
  },
  {
    "op": "core/column-removal",
    "columnName": "V02",
    "description": "Remove column V02"
  },
  {
    "op": "core/column-removal",
    "columnName": "V03",
    "description": "Remove column V03"
  },
  {
    "op": "core/column-removal",
    "columnName": "V04",
    "description": "Remove column V04"
  },
  {
    "op": "core/column-removal",
    "columnName": "V05",
    "description": "Remove column V05"
  },
  {
    "op": "core/column-removal",
    "columnName": "V06",
    "description": "Remove column V06"
  },
  {
    "op": "core/column-removal",
    "columnName": "V07",
    "description": "Remove column V07"
  },
  {
    "op": "core/column-removal",
    "columnName": "V08",
    "description": "Remove column V08"
  },
  {
    "op": "core/column-removal",
    "columnName": "V09",
    "description": "Remove column V09"
  },
  {
    "op": "core/column-removal",
    "columnName": "V10",
    "description": "Remove column V10"
  },
  {
    "op": "core/column-removal",
    "columnName": "V11",
    "description": "Remove column V11"
  },
  {
    "op": "core/column-removal",
    "columnName": "V12",
    "description": "Remove column V12"
  },
  {
    "op": "core/column-removal",
    "columnName": "V13",
    "description": "Remove column V13"
  },
  {
    "op": "core/column-removal",
    "columnName": "V14",
    "description": "Remove column V14"
  },
  {
    "op": "core/column-removal",
    "columnName": "V15",
    "description": "Remove column V15"
  },
  {
    "op": "core/column-removal",
    "columnName": "V16",
    "description": "Remove column V16"
  },
  {
    "op": "core/column-removal",
    "columnName": "V17",
    "description": "Remove column V17"
  },
  {
    "op": "core/column-removal",
    "columnName": "V18",
    "description": "Remove column V18"
  },
  {
    "op": "core/column-removal",
    "columnName": "V19",
    "description": "Remove column V19"
  },
  {
    "op": "core/column-removal",
    "columnName": "V20",
    "description": "Remove column V20"
  },
  {
    "op": "core/column-removal",
    "columnName": "V21",
    "description": "Remove column V21"
  },
  {
    "op": "core/column-removal",
    "columnName": "V22",
    "description": "Remove column V22"
  },
  {
    "op": "core/column-removal",
    "columnName": "V23",
    "description": "Remove column V23"
  },
  {
    "op": "core/column-removal",
    "columnName": "V24",
    "description": "Remove column V24"
  },
  {
    "op": "core/column-removal",
    "columnName": "V25",
    "description": "Remove column V25"
  },
  {
    "op": "core/column-removal",
    "columnName": "V26",
    "description": "Remove column V26"
  },
  {
    "op": "core/column-removal",
    "columnName": "V27",
    "description": "Remove column V27"
  },
  {
    "op": "core/column-removal",
    "columnName": "V28",
    "description": "Remove column V28"
  },
  {
    "op": "core/column-removal",
    "columnName": "V29",
    "description": "Remove column V29"
  },
  {
    "op": "core/column-removal",
    "columnName": "V30",
    "description": "Remove column V30"
  },
  {
    "op": "core/column-removal",
    "columnName": "V31",
    "description": "Remove column V31"
  },
  {
    "op": "core/transpose-columns-into-rows",
    "startColumnName": "D01",
    "columnCount": -1,
    "ignoreBlankCells": true,
    "fillDown": true,
    "separator": null,
    "keyColumnName": "Day",
    "valueColumnName": "Measurement",
    "description": "Transpose cells in columns starting with D01 into rows in two new columns named Day and Measurement"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Day",
    "expression": "grel:value.substring(1,3)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Day using expression grel:value.substring(1,3)"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ANO",
    "newColumnName": "year",
    "description": "Rename column ANO to year"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "year",
    "newColumnName": "Year",
    "description": "Rename column year to Year"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "MES",
    "newColumnName": "Month",
    "description": "Rename column MES to Month"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Day",
    "expression": "grel:value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Day using expression grel:value"
  },
  {
    "op": "core/multivalued-cell-join",
    "columnName": "Year",
    "keyColumnName": "PROVINCIA",
    "separator": "",
    "description": "Join multi-valued cells in column Year"
  },
  {
    "op": "core/multivalued-cell-join",
    "columnName": "Year",
    "keyColumnName": "PROVINCIA",
    "separator": "-",
    "description": "Join multi-valued cells in column Year"
  },
  {
    "op": "core/multivalued-cell-join",
    "columnName": "Year",
    "keyColumnName": "PROVINCIA",
    "separator": "-",
    "description": "Join multi-valued cells in column Year"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Year",
    "expression": "join ([coalesce(cells['Year'].value,''),coalesce(cells['Month'].value,''),coalesce(cells['Day'].value,'')],'-')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Year using expression join ([coalesce(cells['Year'].value,''),coalesce(cells['Month'].value,''),coalesce(cells['Day'].value,'')],'-')"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Year",
    "newColumnName": "Time",
    "description": "Rename column Year to Time"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Time",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Time using expression value.toDate()"
  },
  {
    "op": "core/column-removal",
    "columnName": "Month",
    "description": "Remove column Month"
  },
  {
    "op": "core/column-removal",
    "columnName": "Day",
    "description": "Remove column Day"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "CodeofStation",
    "expression": "grel:cell.cross(\"StationInformation\",\"StationOfCode\").cells[\"StationName\"].value[0]",
    "onError": "set-to-blank",
    "newColumnName": "StationName",
    "columnInsertIndex": 5,
    "description": "Create column StationName at index 5 based on column CodeofStation using expression grel:cell.cross(\"StationInformation\",\"StationOfCode\").cells[\"StationName\"].value[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "CodeofStation",
    "expression": "grel:cell.cross(\"StationInformation\",\"StationOfCode\").cells[\"Longitude\"].value[0]",
    "onError": "set-to-blank",
    "newColumnName": "Longitude",
    "columnInsertIndex": 5,
    "description": "Create column Longitude at index 5 based on column CodeofStation using expression grel:cell.cross(\"StationInformation\",\"StationOfCode\").cells[\"Longitude\"].value[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "CodeofStation",
    "expression": "grel:cell.cross(\"StationInformation\",\"StationOfCode\").cells[\"Latitude\"].value[0]",
    "onError": "set-to-blank",
    "newColumnName": "Latitude",
    "columnInsertIndex": 5,
    "description": "Create column Latitude at index 5 based on column CodeofStation using expression grel:cell.cross(\"StationInformation\",\"StationOfCode\").cells[\"Latitude\"].value[0]"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Magnitude",
    "expression": "grel:'0'+value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Magnitude using expression grel:'0'+value"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Magnitude",
    "expression": "grel:cell.cross(\"Magnitude\",\"Magnitude\").cells[\"MagnitudeName\"].value[0]",
    "onError": "set-to-blank",
    "newColumnName": "MagnitudeName",
    "columnInsertIndex": 4,
    "description": "Create column MagnitudeName at index 4 based on column Magnitude using expression grel:cell.cross(\"Magnitude\",\"Magnitude\").cells[\"MagnitudeName\"].value[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Magnitude",
    "expression": "grel:cell.cross(\"Magnitude\",\"Magnitude\").cells[\"UnitofMeasurement\"].value[0]",
    "onError": "set-to-blank",
    "newColumnName": "UnitofMeasurement",
    "columnInsertIndex": 4,
    "description": "Create column UnitofMeasurement at index 4 based on column Magnitude using expression grel:cell.cross(\"Magnitude\",\"Magnitude\").cells[\"UnitofMeasurement\"].value[0]"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Technique",
    "expression": "grel:cell.cross(\"Magnitude\",\"Technique\").cells[\"TechniqueName\"].value[0]",
    "onError": "set-to-blank",
    "newColumnName": "TechniqueName",
    "columnInsertIndex": 11,
    "description": "Create column TechniqueName at index 11 based on column Technique using expression grel:cell.cross(\"Magnitude\",\"Technique\").cells[\"TechniqueName\"].value[0]"
  },
  {
    "op": "core/column-removal",
    "columnName": "PROVINCIA",
    "description": "Remove column PROVINCIA"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Magnitude",
    "newColumnName": "Code",
    "description": "Rename column Magnitude to Code"
  },
  {
    "op": "core/column-removal",
    "columnName": "Technique",
    "description": "Remove column Technique"
  },
  {
    "op": "core/column-removal",
    "columnName": "TechniqueName",
    "description": "Remove column TechniqueName"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "UnitofMeasurement",
    "newColumnName": "UnitofMeasure",
    "description": "Rename column UnitofMeasurement to UnitofMeasure"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "UnitofMeasure",
    "newColumnName": "UnitOfMeasure",
    "description": "Rename column UnitofMeasure to UnitOfMeasure"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "Municipality",
    "expression": "grel:\"Madrid\"",
    "onError": "set-to-blank",
    "newColumnName": "MunicipalityName",
    "columnInsertIndex": 1,
    "description": "Create column MunicipalityName at index 1 based on column Municipality using expression grel:\"Madrid\""
  }
]